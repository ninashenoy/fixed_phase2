Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON INTEGER
    9            | identifiers error INTEGER

   10 identifiers: ident COMMA identifiers
   11            | ident
   12            | %empty

   13 ident: IDENT

   14 number: NUMBER

   15 statements: statement statements
   16           | %empty

   17 statement: assign_statement SEMICOLON
   18          | if_statement SEMICOLON
   19          | IF boolexp THEN statements ENDIF
   20          | do_statement SEMICOLON
   21          | while_statement SEMICOLON
   22          | READ vars SEMICOLON
   23          | WRITE vars SEMICOLON
   24          | BREAK SEMICOLON
   25          | RETURN expr SEMICOLON
   26          | CONTINUE

   27 assign_statement: var ASSIGN expr
   28                 | var error expr

   29 if_statement: %empty
   30             | IF boolexp THEN statements ELSE statements ENDIF

   31 while_statement: WHILE boolexp BEGINLOOP statements ENDLOOP

   32 do_statement: DO BEGINLOOP statements ENDLOOP WHILE boolexp

   33 boolexp: relation_and_expr relation_and_exprs

   34 relation_and_expr: relationexpr relation_exprs

   35 relation_and_exprs: %empty
   36                   | OR relation_and_expr relation_and_exprs

   37 relation_exprs: %empty
   38               | AND relationexpr relation_exprs

   39 relationexpr: NOT relationexpr
   40             | expr comparison expr
   41             | TRUE
   42             | FALSE
   43             | L_PAREN boolexp R_PAREN
   44             | L_PAREN error R_PAREN

   45 comparison: EQ
   46           | NEQ
   47           | LT
   48           | LTE
   49           | GT
   50           | GTE

   51 exps: %empty
   52     | expr
   53     | expr COMMA exps

   54 expr: multexpr multexprs

   55 multexprs: %empty
   56          | ADD multexpr multexprs
   57          | SUB multexpr multexprs

   58 multexpr: term terms

   59 terms: MULT term terms
   60      | DIV term terms
   61      | MOD term terms
   62      | %empty

   63 term: neg_term
   64     | ident_term

   65 neg_term: SUB neg_term
   66         | var
   67         | number
   68         | L_PAREN expr R_PAREN

   69 ident_term: ident L_PAREN exps R_PAREN

   70 vars: var COMMA vars
   71     | var
   72     | %empty

   73 var: ident
   74    | ident L_SQUARE_BRACKET expr R_SQUARE_BRACKET
   75    | ident L_SQUARE_BRACKET error R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 9 28 44 75
L_PAREN (258) 43 44 68 69
R_PAREN (259) 43 44 68 69
L_SQUARE_BRACKET (260) 7 74 75
R_SQUARE_BRACKET (261) 7 74 75
ADD (262) 56
SUB (263) 57 65
MULT (264) 59
DIV (265) 60
MOD (266) 61
EQ (267) 45
NEQ (268) 46
LT (269) 47
LTE (270) 48
GT (271) 49
GTE (272) 50
AND (273) 38
OR (274) 36
NOT (275) 39
ASSIGN (276) 27
FUNCTION (277) 4
BEGIN_PARAMS (278) 4
END_PARAMS (279) 4
BEGIN_LOCALS (280) 4
END_LOCALS (281) 4
BEGIN_BODY (282) 4
END_BODY (283) 4
CONTINUE (284) 26
INTEGER (285) 7 8 9
ARRAY (286) 7
OF (287) 7
IF (288) 19 30
THEN (289) 19 30
ENDIF (290) 19 30
WHILE (291) 31 32
DO (292) 32
BEGINLOOP (293) 31 32
ENDLOOP (294) 31 32
BREAK (295) 24
READ (296) 22
WRITE (297) 23
TRUE (298) 41
FALSE (299) 42
RETURN (300) 25
SEMICOLON (301) 4 5 17 18 20 21 22 23 24 25
COLON (302) 7 8
COMMA (303) 10 53 70
ELSE (304) 30
IDENT (305) 13
NUMBER (306) 14


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 2
function (55)
    on left: 4, on right: 2
declarations (56)
    on left: 5 6, on right: 4 5
declaration (57)
    on left: 7 8 9, on right: 5
identifiers (58)
    on left: 10 11 12, on right: 7 8 9 10
ident (59)
    on left: 13, on right: 4 10 11 69 73 74 75
number (60)
    on left: 14, on right: 7 67
statements (61)
    on left: 15 16, on right: 4 15 19 30 31 32
statement (62)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 15
assign_statement (63)
    on left: 27 28, on right: 17
if_statement (64)
    on left: 29 30, on right: 18
while_statement (65)
    on left: 31, on right: 21
do_statement (66)
    on left: 32, on right: 20
boolexp (67)
    on left: 33, on right: 19 30 31 32 43
relation_and_expr (68)
    on left: 34, on right: 33 36
relation_and_exprs (69)
    on left: 35 36, on right: 33 36
relation_exprs (70)
    on left: 37 38, on right: 34 38
relationexpr (71)
    on left: 39 40 41 42 43 44, on right: 34 38 39
comparison (72)
    on left: 45 46 47 48 49 50, on right: 40
exps (73)
    on left: 51 52 53, on right: 53 69
expr (74)
    on left: 54, on right: 25 27 28 40 52 53 68 74
multexprs (75)
    on left: 55 56 57, on right: 54 56 57
multexpr (76)
    on left: 58, on right: 54 56 57
terms (77)
    on left: 59 60 61 62, on right: 58 59 60 61
term (78)
    on left: 63 64, on right: 58 59 60 61
neg_term (79)
    on left: 65 66 67 68, on right: 63 65
ident_term (80)
    on left: 69, on right: 64
vars (81)
    on left: 70 71 72, on right: 22 23 70
var (82)
    on left: 73 74 75, on right: 27 28 66 70 71


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   13 ident: IDENT .

    $default  reduce using rule 13 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    END_PARAMS  reduce using rule 6 (declarations)
    $default    reduce using rule 12 (identifiers)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    8            | identifiers . COLON INTEGER
    9            | identifiers . error INTEGER

    error  shift, and go to state 17
    COLON  shift, and go to state 18


State 14

   10 identifiers: ident . COMMA identifiers
   11            | ident .

    COMMA  shift, and go to state 19

    $default  reduce using rule 11 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    error     reduce using rule 12 (identifiers)
    COLON     reduce using rule 12 (identifiers)
    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    9 declaration: identifiers error . INTEGER

    INTEGER  shift, and go to state 22


State 18

    7 declaration: identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON . INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 19

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    $default  reduce using rule 12 (identifiers)

    identifiers  go to state 25
    ident        go to state 14


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    END_LOCALS  reduce using rule 6 (declarations)
    $default    reduce using rule 12 (identifiers)

    declarations  go to state 26
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 21

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 22

    9 declaration: identifiers error INTEGER .

    $default  reduce using rule 9 (declaration)


State 23

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 24

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 26

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 27

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

   14 number: NUMBER .

    $default  reduce using rule 14 (number)


State 30

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 42
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 32

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 49


State 33

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 34

   19 statement: IF . boolexp THEN statements ENDIF
   30 if_statement: IF . boolexp THEN statements ELSE statements ENDIF

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident              go to state 55
    number             go to state 56
    boolexp            go to state 57
    relation_and_expr  go to state 58
    relationexpr       go to state 59
    expr               go to state 60
    multexpr           go to state 61
    term               go to state 62
    neg_term           go to state 63
    ident_term         go to state 64
    var                go to state 65


State 35

   31 while_statement: WHILE . boolexp BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident              go to state 55
    number             go to state 56
    boolexp            go to state 66
    relation_and_expr  go to state 58
    relationexpr       go to state 59
    expr               go to state 60
    multexpr           go to state 61
    term               go to state 62
    neg_term           go to state 63
    ident_term         go to state 64
    var                go to state 65


State 36

   32 do_statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexp

    BEGINLOOP  shift, and go to state 67


State 37

   24 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 38

   22 statement: READ . vars SEMICOLON

    IDENT  shift, and go to state 5

    $default  reduce using rule 72 (vars)

    ident  go to state 41
    vars   go to state 69
    var    go to state 70


State 39

   23 statement: WRITE . vars SEMICOLON

    IDENT  shift, and go to state 5

    $default  reduce using rule 72 (vars)

    ident  go to state 41
    vars   go to state 71
    var    go to state 70


State 40

   25 statement: RETURN . expr SEMICOLON

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 73
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 41

   73 var: ident .
   74    | ident . L_SQUARE_BRACKET expr R_SQUARE_BRACKET
   75    | ident . L_SQUARE_BRACKET error R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 73 (var)


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 75


State 43

   15 statements: statement . statements

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 76
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 44

   17 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 45

   18 statement: if_statement . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 46

   21 statement: while_statement . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 47

   20 statement: do_statement . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 48

   27 assign_statement: var . ASSIGN expr
   28                 | var . error expr

    error   shift, and go to state 81
    ASSIGN  shift, and go to state 82


State 49

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 83


State 50

   43 relationexpr: L_PAREN . boolexp R_PAREN
   44             | L_PAREN . error R_PAREN
   68 neg_term: L_PAREN . expr R_PAREN

    error    shift, and go to state 84
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident              go to state 55
    number             go to state 56
    boolexp            go to state 85
    relation_and_expr  go to state 58
    relationexpr       go to state 59
    expr               go to state 86
    multexpr           go to state 61
    term               go to state 62
    neg_term           go to state 63
    ident_term         go to state 64
    var                go to state 65


State 51

   65 neg_term: SUB . neg_term

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident     go to state 41
    number    go to state 56
    neg_term  go to state 87
    var       go to state 65


State 52

   39 relationexpr: NOT . relationexpr

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident         go to state 55
    number        go to state 56
    relationexpr  go to state 88
    expr          go to state 60
    multexpr      go to state 61
    term          go to state 62
    neg_term      go to state 63
    ident_term    go to state 64
    var           go to state 65


State 53

   41 relationexpr: TRUE .

    $default  reduce using rule 41 (relationexpr)


State 54

   42 relationexpr: FALSE .

    $default  reduce using rule 42 (relationexpr)


State 55

   69 ident_term: ident . L_PAREN exps R_PAREN
   73 var: ident .
   74    | ident . L_SQUARE_BRACKET expr R_SQUARE_BRACKET
   75    | ident . L_SQUARE_BRACKET error R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 89
    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 73 (var)


State 56

   67 neg_term: number .

    $default  reduce using rule 67 (neg_term)


State 57

   19 statement: IF boolexp . THEN statements ENDIF
   30 if_statement: IF boolexp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 90


State 58

   33 boolexp: relation_and_expr . relation_and_exprs

    OR  shift, and go to state 91

    $default  reduce using rule 35 (relation_and_exprs)

    relation_and_exprs  go to state 92


State 59

   34 relation_and_expr: relationexpr . relation_exprs

    AND  shift, and go to state 93

    $default  reduce using rule 37 (relation_exprs)

    relation_exprs  go to state 94


State 60

   40 relationexpr: expr . comparison expr

    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    LT   shift, and go to state 97
    LTE  shift, and go to state 98
    GT   shift, and go to state 99
    GTE  shift, and go to state 100

    comparison  go to state 101


State 61

   54 expr: multexpr . multexprs

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 55 (multexprs)

    multexprs  go to state 104


State 62

   58 multexpr: term . terms

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 107

    $default  reduce using rule 62 (terms)

    terms  go to state 108


State 63

   63 term: neg_term .

    $default  reduce using rule 63 (term)


State 64

   64 term: ident_term .

    $default  reduce using rule 64 (term)


State 65

   66 neg_term: var .

    $default  reduce using rule 66 (neg_term)


State 66

   31 while_statement: WHILE boolexp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 109


State 67

   32 do_statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexp

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 110
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 68

   24 statement: BREAK SEMICOLON .

    $default  reduce using rule 24 (statement)


State 69

   22 statement: READ vars . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 70

   70 vars: var . COMMA vars
   71     | var .

    COMMA  shift, and go to state 112

    $default  reduce using rule 71 (vars)


State 71

   23 statement: WRITE vars . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 72

   68 neg_term: L_PAREN . expr R_PAREN

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 114
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 73

   25 statement: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 74

   74 var: ident L_SQUARE_BRACKET . expr R_SQUARE_BRACKET
   75    | ident L_SQUARE_BRACKET . error R_SQUARE_BRACKET

    error    shift, and go to state 116
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 117
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 75

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 76

   15 statements: statement statements .

    $default  reduce using rule 15 (statements)


State 77

   17 statement: assign_statement SEMICOLON .

    $default  reduce using rule 17 (statement)


State 78

   18 statement: if_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 79

   21 statement: while_statement SEMICOLON .

    $default  reduce using rule 21 (statement)


State 80

   20 statement: do_statement SEMICOLON .

    $default  reduce using rule 20 (statement)


State 81

   28 assign_statement: var error . expr

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 118
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 82

   27 assign_statement: var ASSIGN . expr

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 119
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 83

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 84

   44 relationexpr: L_PAREN error . R_PAREN

    R_PAREN  shift, and go to state 120


State 85

   43 relationexpr: L_PAREN boolexp . R_PAREN

    R_PAREN  shift, and go to state 121


State 86

   40 relationexpr: expr . comparison expr
   68 neg_term: L_PAREN expr . R_PAREN

    R_PAREN  shift, and go to state 122
    EQ       shift, and go to state 95
    NEQ      shift, and go to state 96
    LT       shift, and go to state 97
    LTE      shift, and go to state 98
    GT       shift, and go to state 99
    GTE      shift, and go to state 100

    comparison  go to state 101


State 87

   65 neg_term: SUB neg_term .

    $default  reduce using rule 65 (neg_term)


State 88

   39 relationexpr: NOT relationexpr .

    $default  reduce using rule 39 (relationexpr)


State 89

   69 ident_term: ident L_PAREN . exps R_PAREN

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    $default  reduce using rule 51 (exps)

    ident       go to state 55
    number      go to state 56
    exps        go to state 123
    expr        go to state 124
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 90

   19 statement: IF boolexp THEN . statements ENDIF
   30 if_statement: IF boolexp THEN . statements ELSE statements ENDIF

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 125
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 91

   36 relation_and_exprs: OR . relation_and_expr relation_and_exprs

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident              go to state 55
    number             go to state 56
    relation_and_expr  go to state 126
    relationexpr       go to state 59
    expr               go to state 60
    multexpr           go to state 61
    term               go to state 62
    neg_term           go to state 63
    ident_term         go to state 64
    var                go to state 65


State 92

   33 boolexp: relation_and_expr relation_and_exprs .

    $default  reduce using rule 33 (boolexp)


State 93

   38 relation_exprs: AND . relationexpr relation_exprs

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident         go to state 55
    number        go to state 56
    relationexpr  go to state 127
    expr          go to state 60
    multexpr      go to state 61
    term          go to state 62
    neg_term      go to state 63
    ident_term    go to state 64
    var           go to state 65


State 94

   34 relation_and_expr: relationexpr relation_exprs .

    $default  reduce using rule 34 (relation_and_expr)


State 95

   45 comparison: EQ .

    $default  reduce using rule 45 (comparison)


State 96

   46 comparison: NEQ .

    $default  reduce using rule 46 (comparison)


State 97

   47 comparison: LT .

    $default  reduce using rule 47 (comparison)


State 98

   48 comparison: LTE .

    $default  reduce using rule 48 (comparison)


State 99

   49 comparison: GT .

    $default  reduce using rule 49 (comparison)


State 100

   50 comparison: GTE .

    $default  reduce using rule 50 (comparison)


State 101

   40 relationexpr: expr comparison . expr

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    expr        go to state 128
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 102

   56 multexprs: ADD . multexpr multexprs

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    multexpr    go to state 129
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 103

   57 multexprs: SUB . multexpr multexprs

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    multexpr    go to state 130
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 104

   54 expr: multexpr multexprs .

    $default  reduce using rule 54 (expr)


State 105

   59 terms: MULT . term terms

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    term        go to state 131
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 106

   60 terms: DIV . term terms

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    term        go to state 132
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 107

   61 terms: MOD . term terms

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident       go to state 55
    number      go to state 56
    term        go to state 133
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 108

   58 multexpr: term terms .

    $default  reduce using rule 58 (multexpr)


State 109

   31 while_statement: WHILE boolexp BEGINLOOP . statements ENDLOOP

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 134
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 110

   32 do_statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexp

    ENDLOOP  shift, and go to state 135


State 111

   22 statement: READ vars SEMICOLON .

    $default  reduce using rule 22 (statement)


State 112

   70 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    $default  reduce using rule 72 (vars)

    ident  go to state 41
    vars   go to state 136
    var    go to state 70


State 113

   23 statement: WRITE vars SEMICOLON .

    $default  reduce using rule 23 (statement)


State 114

   68 neg_term: L_PAREN expr . R_PAREN

    R_PAREN  shift, and go to state 122


State 115

   25 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 25 (statement)


State 116

   75 var: ident L_SQUARE_BRACKET error . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 137


State 117

   74 var: ident L_SQUARE_BRACKET expr . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 138


State 118

   28 assign_statement: var error expr .

    $default  reduce using rule 28 (assign_statement)


State 119

   27 assign_statement: var ASSIGN expr .

    $default  reduce using rule 27 (assign_statement)


State 120

   44 relationexpr: L_PAREN error R_PAREN .

    $default  reduce using rule 44 (relationexpr)


State 121

   43 relationexpr: L_PAREN boolexp R_PAREN .

    $default  reduce using rule 43 (relationexpr)


State 122

   68 neg_term: L_PAREN expr R_PAREN .

    $default  reduce using rule 68 (neg_term)


State 123

   69 ident_term: ident L_PAREN exps . R_PAREN

    R_PAREN  shift, and go to state 139


State 124

   52 exps: expr .
   53     | expr . COMMA exps

    COMMA  shift, and go to state 140

    $default  reduce using rule 52 (exps)


State 125

   19 statement: IF boolexp THEN statements . ENDIF
   30 if_statement: IF boolexp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 141
    ELSE   shift, and go to state 142


State 126

   36 relation_and_exprs: OR relation_and_expr . relation_and_exprs

    OR  shift, and go to state 91

    $default  reduce using rule 35 (relation_and_exprs)

    relation_and_exprs  go to state 143


State 127

   38 relation_exprs: AND relationexpr . relation_exprs

    AND  shift, and go to state 93

    $default  reduce using rule 37 (relation_exprs)

    relation_exprs  go to state 144


State 128

   40 relationexpr: expr comparison expr .

    $default  reduce using rule 40 (relationexpr)


State 129

   56 multexprs: ADD multexpr . multexprs

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 55 (multexprs)

    multexprs  go to state 145


State 130

   57 multexprs: SUB multexpr . multexprs

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 55 (multexprs)

    multexprs  go to state 146


State 131

   59 terms: MULT term . terms

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 107

    $default  reduce using rule 62 (terms)

    terms  go to state 147


State 132

   60 terms: DIV term . terms

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 107

    $default  reduce using rule 62 (terms)

    terms  go to state 148


State 133

   61 terms: MOD term . terms

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    MOD   shift, and go to state 107

    $default  reduce using rule 62 (terms)

    terms  go to state 149


State 134

   31 while_statement: WHILE boolexp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 135

   32 do_statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexp

    WHILE  shift, and go to state 151


State 136

   70 vars: var COMMA vars .

    $default  reduce using rule 70 (vars)


State 137

   75 var: ident L_SQUARE_BRACKET error R_SQUARE_BRACKET .

    $default  reduce using rule 75 (var)


State 138

   74 var: ident L_SQUARE_BRACKET expr R_SQUARE_BRACKET .

    $default  reduce using rule 74 (var)


State 139

   69 ident_term: ident L_PAREN exps R_PAREN .

    $default  reduce using rule 69 (ident_term)


State 140

   53 exps: expr COMMA . exps

    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    $default  reduce using rule 51 (exps)

    ident       go to state 55
    number      go to state 56
    exps        go to state 152
    expr        go to state 124
    multexpr    go to state 61
    term        go to state 62
    neg_term    go to state 63
    ident_term  go to state 64
    var         go to state 65


State 141

   19 statement: IF boolexp THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 142

   30 if_statement: IF boolexp THEN statements ELSE . statements ENDIF

    CONTINUE  shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    BREAK     shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    SEMICOLON  reduce using rule 29 (if_statement)
    $default   reduce using rule 16 (statements)

    ident             go to state 41
    statements        go to state 153
    statement         go to state 43
    assign_statement  go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    do_statement      go to state 47
    var               go to state 48


State 143

   36 relation_and_exprs: OR relation_and_expr relation_and_exprs .

    $default  reduce using rule 36 (relation_and_exprs)


State 144

   38 relation_exprs: AND relationexpr relation_exprs .

    $default  reduce using rule 38 (relation_exprs)


State 145

   56 multexprs: ADD multexpr multexprs .

    $default  reduce using rule 56 (multexprs)


State 146

   57 multexprs: SUB multexpr multexprs .

    $default  reduce using rule 57 (multexprs)


State 147

   59 terms: MULT term terms .

    $default  reduce using rule 59 (terms)


State 148

   60 terms: DIV term terms .

    $default  reduce using rule 60 (terms)


State 149

   61 terms: MOD term terms .

    $default  reduce using rule 61 (terms)


State 150

   31 while_statement: WHILE boolexp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 31 (while_statement)


State 151

   32 do_statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexp

    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    ident              go to state 55
    number             go to state 56
    boolexp            go to state 154
    relation_and_expr  go to state 58
    relationexpr       go to state 59
    expr               go to state 60
    multexpr           go to state 61
    term               go to state 62
    neg_term           go to state 63
    ident_term         go to state 64
    var                go to state 65


State 152

   53 exps: expr COMMA exps .

    $default  reduce using rule 53 (exps)


State 153

   30 if_statement: IF boolexp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 155


State 154

   32 do_statement: DO BEGINLOOP statements ENDLOOP WHILE boolexp .

    $default  reduce using rule 32 (do_statement)


State 155

   30 if_statement: IF boolexp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 30 (if_statement)
